<?php
namespace SmsZilla\Adapter;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-08-02 at 09:55:14.
 */
class MockAdapterTest extends \PHPUnit\Framework\TestCase
{
    /**
     * @var MockAdapter
     */
    protected $object;
    
    protected $message = null;
    
    private $config = [];

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->config = include  __DIR__ . '/../../config.php';
        $this->object = new MockAdapter;
        $this->message = new \SmsZilla\SmsMessageModel();
        $this->message->setText($this->config['message']);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
    }

    /**
     * @covers SmsZilla\Adapter\MockAdapter::send
     */
    public function testSend()
    {
        $this->object->send($this->message);
        $this->object->send($this->message);
        $this->assertCount(2, $this->object->getSentMessages());
        $this->assertCount(0, $this->object->getErrors());
    }

    /**
     * @covers SmsZilla\Adapter\MockAdapter::getSentMessages
     */
    public function testGetSentMessages()
    {
        $this->object->send($this->message);
        $data = $this->object->getSentMessages();
        $this->assertEquals($this->config['message'], $data[0]->getText());
    }
    
    /**
     * @covers \SmsZilla\Adapter\AbstractAdapter::getParams()
     */
    public function testGetParam() {
        $this->expectExceptionMessage("Paramater name must be not empty string");
        $this->expectException(\InvalidArgumentException::class);
        $this->object->getParam('');
    }

    /**
     * @covers \SmsZilla\Adapter\AbstractAdapter::getParams()
     */
    public function testGetParam2() {
        $this->expectExceptionMessage("Parameter no_param doesn't exists");
        $this->expectException(\SmsZilla\ConfigurationException::class);
        $this->object->getParam('no_param');
    }
    
    
    /**
     * @covers \SmsZilla\Adapter\AbstractAdapter::getParams()
     */
    public function testSetParam() {
        $this->expectExceptionMessage('Parameter $params must be an array.');
        $this->expectException(\InvalidArgumentException::class);
        $this->object->setParams(['no_param']);
    }

}
